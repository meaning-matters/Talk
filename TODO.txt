NEXT:
# Disable deletion of Phones when used in Settings, Destination and as Caller ID: do in all places PhoneVC and PhonesVC.
Perhaps move test code to common place.
# Place phone number type (iPhone, mobile, home, office, ...) as detail text under Contact name in above list.
# Update PhoneVC when a caller ID was assigned, it may need to be added to its list.
# Place only one can't delete Phone in the PhoneVC; one that summarizes the full condition(s).
# Add dummy Numbers and go through the VCs to see if all is working.
# When user taps cell of above list, show dialog "Do you want to call this contact?" "Call" / "Cancel".
# Implement swipe delete of the above cells.
*/


Make country list diacritic insensitive

* Check what happens when user switches SIM (e.g. BE -> NL).  Both when ReadFromSIM is on
  and off.  Integrate this behaviour with alerts given to user when he calls first local
  number.  Also find better place for code in viewWillAppear of SettingsViewController.

* Netherlands Antilles flag not correct, must have 5 instead of 6 stars.

* Use special new textfield with format in DestinationVC.

* Revisit "canceled" (iOS preferred?) vs. "cancelled" (current in app, also used in
  AFNetworking, so don't change these!).

* Check waarom call direct na prov. niet lukt.  Ook lukken calls sowieso soms niet.

* Zag "Nothing to Restore" terwijl er wel een account was.  Zijn er andere errors misschien die nu op een hoop
  worden geveegd?
  
* Zag dit, zonder ISO: postPath request: https://api.numberbay.com/users?currencyCode= 
  Was waarschijnlijk van niet wachten op loadProducts completion.

* Maak één grote Strings.m met daarin alle strings. Groepering onder Common, Provisioning, .... en dan functies
  provisioningInvalidNumberTitle:, met als key @"Privisioning:InvalidNumberTitle".
  
* Technical error: 32004?

* Check if Common checkCountryOfPhoneNumber is not broken by changes for CountriesVC zie breakpoint

* Create CountryTableCell that takes a iSO country code and use in SettingsVC and NumberAreaVC ...

* Test how currencyCode to #8B can be empty, right after provisioning.  Perhaps order problem with loading products?

* Make sure that credit & number purchases are handled correctly when they are pushed by App Store later, i.e.
  without the UI (for example at app kill/crash/error between payment OK, and processing on server).  The
  productCompletion will/should be nil then.
  
* Rename WebClient methods to simpler prefixes: Get, Buy, ... (instead fo retrieve, purchase, ...).

* Sort PurchaseManager methods in REST.txt order.

* Check what happens when notifications are off, buyAccount in PurchaseManager.

* Do all tables using http://stackoverflow.com/a/18418549/1971013

* Think about if it's really good to cancel the who buy VC when Store alert is cancelled, as is done now.

* Add PurchaseManager loadProducts to Number/Credit Buy, with error alerts and busy indication while loading. Or use
  notification sent by PurchaseMgr.

* In WebClient return NSError with webClientFail code and localized string, as id content (call it object?); in case of error.

* Rewrite WebClient status texts. localizedStringForStatus

* Add a badge to Credit tab when below tier 5. 

* Add warning push notification from server when credit gets below tier 5.

* Order delegate methods in same way accross .m files (e.g. table view delegates).

* Place common methods (textfield & keyboard handling) between NumberAreaVC, NumberVC, DestinationsVC and others in super class.

* Implement Number[s]VC with NSFetchResultsController (see Destination[s]VC).

* Als #2 faalt, mislukt Restore silently: zorg dat er een melding komt. kijk ook na voor #1 e.d.

* als je nummer-koop cancelt wordt deze toegevoegd als pending!

* Differentiate between real WebClient network problem, and API problem.

* Introduce NumberArea object to encapsulate exceptions of fields yes/no present and other logic (e.g to/from JSON).

* Warn users about expiring numbers.  Warn when number has expired. (Warn user when synchronize from server returns less numbers.)

* "Validate" is deselected after Closing alert, in other parts of the UI the button is immediately deselected when there's an alert; make same

* Make sure all cancelAll WebClient methods are used when cancelling stuff in the UI or otherwise appropriately.

* Wait for Store products to have loaded, because otherwise Currency is not available, and #1 fails.

* Use NSError everywhere, instead of WebClientStatus values here and there.
* Use NSError's localizedRecoverySuggestion instead of "Please try again later."
* Do: [NSError errorWithDomain:FSMyAppErrorDomain code:FSProfileParsingFailedError userInfo:@{NSLocalizedDescriptionKey : FS_ERROR_LOCALIZED_DESCRIPTION(error.code)}]; –
  en haal message uit error met userInfo[NSLocalizedDescriptionKey];

* Use capitalized Destinations and Numbers, .... in texts?  currently use "Destinations" & "numbers" -> inconsistent

* Do simIsoCountryCode in Settings VC en elders. niet met ==/!= nil maar met length.

* Make NSString properties copy, instead of strong:http://stackoverflow.com/questions/387959/nsstring-property-copy-or-retain

* Make eigen NSLocalizedString met nil, [NSBunble mainBundle].

* Gebruik tijd bij bepalen of callback stop nog gedaan moet worden.  Nu komt er namelijk een alert als je NB pas veel later weer opent.

* Groot probleem in PurchaseManager zie "We can get here when app did not process purchase previous time ..."

* Check if "calling" label in CallbackVC is done on main thread; saw some delays in setting it.  Fixed things, but still no string at some point with every Callback call.

* NumberAreaViewController #834 do something with isValid!!!

* Kleur highlighted number op dialpad (copy/paste)

* Done button in Number info invullen (laatste veld) moet eigenlijk pas blauw worden als er iets is ingevuld

* Als je bij Germany number bijvoorbeeld een stad kiest, moet ie in lijst met zips eigenlijk naar goeie plek springen in lijst.

* App crasht zonder account op Credit tab, en als je belt

* na Restore is Caller ID niet ingevuld en crasht app bij aanmaken dictionary voor callback api message.

* add refreshControl to UITableViewController property, remove added delays from action methods.

* Kijk clearsSelectionOnViewWillAppear ff na in alle UITableVC's; eigen code to deselect kan weg denk ik.

* Create and use Common method +(NSString*)localizedError:(NSError*)error; that checks userInfo for NSLocalizedDescriptionKey, and if not there, create own description.  Because on sandbox I sometimes get : po error.localizedDescription
The operation couldn’t be completed. (SKErrorDomain error 0.) when can't load Store products.  But perhaps these things won't occur on real system.

* Keypad = US, Dialler = UK!

* Use UIactivitycontroller for Share.

* I switched off [Common checkRemoteNotifications] in PurchaseManager !HAS_BUYING_NUMBERS.  May want to check this when we start using notifications for missed calls for example (once we add incoming numbers).

* Add number virification API that break off the process: so stops calling. Then in app the <Phone back button can be
  enabled again and handled in UIVC's willMoveToParentViewController when parent == nil

* Do Number textFields allow editing halfway the string. When trying to do so, the cursor jumps to the end.  If not see ItemVC #240

* AppDelegate, is this the cause for unavailability of currencyCode sometimes at accoutn creation?    // When account purchase transaction has not been finished, the PurchaseManager receives
// it again at app startup.  This is however slightly earlier than that device token is
// received.  Therefore the PurchaseManager is started up here.

* Assign ivars in init and dealloc methods: https://developer.apple.com/library/mac/documentation/Cocoa/Conceptual/MemoryMgmt/Articles/mmPractical.html

* Make sub-UIViews weak properties: http://stackoverflow.com/questions/23076260/creating-views-programmatically-strong-vs-weak-subviews-in-controller

* Make code to check if Phone and Destination can be deleted (and deletion itself) the same and place more in XyzData module perhaps.

* Dismiss keyboards when tapping table and when scrolling down (possibly with swizzling in a viewDidLoad in UIViewController+Common).

* New datamodel (2.2 or something): RENAME Destination.statements --> Destination.action, DELETE Recording.urlString (because can be generated from uuid).

* Do something with NBLog(@"//### Received notification about address that's unknown to app."); AddressUpdatesHandler

* Disable Accessibility / "Dynamic Type" in app, and select one (or multiple in app Settings) font size for all standard cells.

* Replace observing all NSUserDefaultsDidChangeNotification with specific Settings property observers like:
    [[Settings sharedSettings] addObserver:self
                                forKeyPath:@"sortSegment"
                                   options:NSKeyValueObservingOptionNew
                                   context:nil];
  The app is refreshing too much at the moment (e.g. every tab change is saved in Defaults firing various table refreshes)

* Clean up (i.e. generalize: using one method instread of several slightly different ones) view controllers: The way that cells are deselected when coming back to view, the way tables are reloaded, the way table cells are recreated and filled with data.  Also doing a [super viewDidAppear] before accessing self.tableView.selectedCellIndexPath (or something), clears this variable, [super viewDidAppear] must be placed at the bottom of the method.

* Place Cancel button on HtmlViewController on right side (like New Phone/Number/Destination).

* Fix findContactsHavingNumber: Currently, only valid numbers are searched and only national part is compared. Also look at PhoneNumber:nationalDigits;

* Add feature: Find contact IDs for anonymous Recents numbers. See not used findContactsForAnonymousItems.  App crashed when trying something in this direction; similar crash as documented in one of the NBAddress modules (where I thought that synchonize would help)

* IdType.m Check entered data using regex's.

* Make whole app English: http://stackoverflow.com/q/1669645/1971013, avoid iOS language errors.

* New Address view has larger font for Proof Image's "Required" (UILabel?) than for Name's "Required" and all others (UITextField)

* New Address: Proof Image cell is not deselected after tapping -> it stays grey.

* Adding MBE London from Recents did not update the name in Recents list. Then after restarting app (and seeing the contact in Phone app), the recent still does not show MBE. But does show up as MBE on keypad. May need to rescan unknown Recents at app startup and Contacts update notification.

* Make Keypad past filtering more relaxed. I tried to paste a number copied from Phone app which had New Zealand in the text -> did not work, really annoying. Just strip of all non number characters including A-Z ...

* HK National has "---" as area code, better not show this. It also does not show area code on Number details.

* Move the many "Please try again later." to generic code. Also see if NSError's localizedRecoverySuggestion can be used.
  Also after managed to get iOS error messages in English always (see Dentsply app perhaps), some app error messages can be
  eliminated.

* Pass city through AddressesViewController to AddressViewController, to allow filling it in for LOCAL addresses.

* Add postcode checking using https://gist.github.com/matthewbednarski/4d15c7f50258b82e2d7e (saved as Postcodes.json in project) or other sources.

* SP Mobile ID number does not stay red when invalid when scrolling table view (i.e. refreshing cells).

* It would make sense to always ask for the extra fields also when address is not used for the same country as the
  Number. This would ensure that that address is immediately usable in case of buying a Number in that country (which is the most common case anyway).

* Don't show spinner on Credit when just showing page.

* Implement permanent badge when Credit si low.

* Contact don't seem to be loaded the first time a dialer nunber -> contact search is done.

* Touch to show footnotes does not work on Numbers Terms VC when touching between table groups. On other VCs it's fine.

* When an Address is selected for NumberArea, it's address cell is refreshed/flashed when returning from AddressVC.

* Jump to Get Started after Reset All.